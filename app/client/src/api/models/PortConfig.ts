/* tslint:disable */
/* eslint-disable */
/**
 * IoT Honeypot API
 * IoT Honeypot API 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xsedivy@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PortConfig
 */
export interface PortConfig {
    /**
     * 
     * @type {string}
     * @memberof PortConfig
     */
    protocol?: PortConfigProtocolEnum;
    /**
     * Target port is the port inside the container
     * @type {number}
     * @memberof PortConfig
     */
    targetPort?: number;
    /**
     * Published port is the port on the swarm hosts
     * @type {number}
     * @memberof PortConfig
     */
    publishedPort?: number;
}

/**
* @export
* @enum {string}
*/
export enum PortConfigProtocolEnum {
    Tcp = 'tcp',
    Udp = 'udp'
}

export function PortConfigFromJSON(json: any): PortConfig {
    return PortConfigFromJSONTyped(json, false);
}

export function PortConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'protocol': !exists(json, 'protocol') ? undefined : json['protocol'],
        'targetPort': !exists(json, 'target_port') ? undefined : json['target_port'],
        'publishedPort': !exists(json, 'published_port') ? undefined : json['published_port'],
    };
}

export function PortConfigToJSON(value?: PortConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'protocol': value.protocol,
        'target_port': value.targetPort,
        'published_port': value.publishedPort,
    };
}


