/* tslint:disable */
/* eslint-disable */
/**
 * IoT Honeypot API
 * IoT Honeypot API 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xsedivy@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ContainerSpec,
    ContainerSpecFromJSON,
    ContainerSpecFromJSONTyped,
    ContainerSpecToJSON,
    ServiceStatus,
    ServiceStatusFromJSON,
    ServiceStatusFromJSONTyped,
    ServiceStatusToJSON,
} from './';

/**
 * 
 * @export
 * @interface ServiceSpec
 */
export interface ServiceSpec {
    /**
     * 
     * @type {string}
     * @memberof ServiceSpec
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceSpec
     */
    name?: string;
    /**
     * 
     * @type {ContainerSpec}
     * @memberof ServiceSpec
     */
    containerSpec?: ContainerSpec;
    /**
     * 
     * @type {number}
     * @memberof ServiceSpec
     */
    replicas?: number;
    /**
     * 
     * @type {ServiceStatus}
     * @memberof ServiceSpec
     */
    status?: ServiceStatus;
}

export function ServiceSpecFromJSON(json: any): ServiceSpec {
    return ServiceSpecFromJSONTyped(json, false);
}

export function ServiceSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'containerSpec': !exists(json, 'container_spec') ? undefined : ContainerSpecFromJSON(json['container_spec']),
        'replicas': !exists(json, 'replicas') ? undefined : json['replicas'],
        'status': !exists(json, 'status') ? undefined : ServiceStatusFromJSON(json['status']),
    };
}

export function ServiceSpecToJSON(value?: ServiceSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'container_spec': ContainerSpecToJSON(value.containerSpec),
        'replicas': value.replicas,
        'status': ServiceStatusToJSON(value.status),
    };
}


